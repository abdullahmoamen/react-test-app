{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\react-course-ch9\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\react-course-ch9\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\react-course-ch9\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Abdullah\\\\Desktop\\\\react-course-ch9\\\\src\\\\components\\\\ProductForm.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass ProductForm extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      id: \"\",\n      name: \"\",\n      price: \"\"\n    };\n\n    this.handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var obj;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); //ADD\n\n              if (!(_this.props.match.params.id === \"new\")) {\n                _context.next = 7;\n                break;\n              }\n\n              //Call Backend\n              obj = _objectSpread(_objectSpread({}, _this.state), {}, {\n                count: 0,\n                isInCart: false //Generate the id ==> To use Firebase Database ==> In Lecture we use JSON-SERVER\n                // id: this.props.products[this.props.products.length - 1].id + 1,\n\n              });\n              _context.next = 5;\n              return axios.post(\"https://iti-react-cource.herokuapp.com/products/\", obj);\n\n            case 5:\n              _context.next = 11;\n              break;\n\n            case 7:\n              //EDit\n              obj = _objectSpread(_objectSpread({}, _this.state), {}, {\n                count: 0,\n                isInCart: false\n              }); //Delete ID\n\n              delete obj.id;\n              _context.next = 11;\n              return axios.put(\"https://iti-react-cource.herokuapp.com/products/\" + _this.state.id, obj);\n\n            case 11:\n              _this.props.history.replace(\"/admin\");\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.handleChange = e => {\n      //Clone\n      let state = _objectSpread({}, this.state); //Edit\n\n\n      state[e.currentTarget.name] = e.currentTarget.value; //Set state\n\n      this.setState(state);\n    };\n  }\n\n  componentDidMount() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var id, _yield$axios$get, data, state;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            id = _this2.props.match.params.id;\n\n            if (!(id !== \"new\")) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 4;\n            return axios.get(\"https://iti-react-cource.herokuapp.com/products/\" + id);\n\n          case 4:\n            _yield$axios$get = _context2.sent;\n            data = _yield$axios$get.data;\n            //Clone\n            state = _objectSpread({}, _this2.state); //Edit\n\n            state.name = data.name;\n            state.price = data.price;\n            state.id = data.id; //Set state\n\n            _this2.setState(state);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, this.props.match.params.id === \"new\" ? \"Add Product\" : \"Edit Product\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      onChange: this.handleChange,\n      value: this.state.name,\n      id: \"name\",\n      name: \"name\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      onChange: this.handleChange,\n      value: this.state.price,\n      id: \"price\",\n      name: \"price\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, this.props.match.params.id === \"new\" ? \"Add\" : \"Edit\")));\n  }\n\n}\n\nexport default ProductForm;","map":{"version":3,"sources":["C:/Users/Abdullah/Desktop/react-course-ch9/src/components/ProductForm.jsx"],"names":["React","Component","axios","ProductForm","state","id","name","price","handleSubmit","e","preventDefault","props","match","params","obj","count","isInCart","post","put","history","replace","handleChange","currentTarget","value","setState","componentDidMount","get","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass ProductForm extends Component {\r\n  state = { id: \"\", name: \"\", price: \"\" };\r\n\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    if (id !== \"new\") {\r\n      const { data } = await axios.get(\r\n        \"https://iti-react-cource.herokuapp.com/products/\" + id\r\n      );\r\n      //Clone\r\n      const state = { ...this.state };\r\n      //Edit\r\n      state.name = data.name;\r\n      state.price = data.price;\r\n      state.id = data.id;\r\n      //Set state\r\n      this.setState(state);\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //ADD\r\n    if (this.props.match.params.id === \"new\") {\r\n      //Call Backend\r\n      const obj = {\r\n        ...this.state,\r\n        count: 0,\r\n        isInCart: false,\r\n        //Generate the id ==> To use Firebase Database ==> In Lecture we use JSON-SERVER\r\n        // id: this.props.products[this.props.products.length - 1].id + 1,\r\n      };\r\n      await axios.post(\"https://iti-react-cource.herokuapp.com/products/\", obj);\r\n    } else {\r\n      //EDit\r\n      const obj = {\r\n        ...this.state,\r\n        count: 0,\r\n        isInCart: false,\r\n      };\r\n      //Delete ID\r\n      delete obj.id;\r\n\r\n      await axios.put(\r\n        \"https://iti-react-cource.herokuapp.com/products/\" + this.state.id,\r\n        obj\r\n      );\r\n    }\r\n\r\n    this.props.history.replace(\"/admin\");\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    //Clone\r\n    let state = { ...this.state };\r\n    //Edit\r\n    state[e.currentTarget.name] = e.currentTarget.value;\r\n    //Set state\r\n    this.setState(state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>\r\n          {this.props.match.params.id === \"new\"\r\n            ? \"Add Product\"\r\n            : \"Edit Product\"}\r\n        </h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              className=\"form-control\"\r\n              onChange={this.handleChange}\r\n              value={this.state.name}\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"price\">Price</label>\r\n            <input\r\n              className=\"form-control\"\r\n              onChange={this.handleChange}\r\n              value={this.state.price}\r\n              id=\"price\"\r\n              name=\"price\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            {this.props.match.params.id === \"new\" ? \"Add\" : \"Edit\"}\r\n          </button>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductForm;\r\n"]},"metadata":{},"sourceType":"module"}